{"version":3,"file":"static/js/756.116cf4fc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/ContactForm/contact-form.module.css?aac3","components/Form/ContactForm/ContactForm.jsx","components/Form/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Form/ContactList/contact-list.module.css?9bc0","components/Form/ContactList/ContactList.jsx","redux/contacts/contact-selector.js","webpack://react-homework-template/./src/components/Form/form.module.css?cfaa","components/Form/Form.jsx","hoc/WithAuthRedirect.jsx","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"contact-form_label__4vnAo\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './contact-form.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [form, setForm] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setForm(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(form);\n    setForm({\n      name: '',\n      number: '',\n    });\n  };\n\n  const { name, number } = form;\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label className={styles.label} htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label className={styles.label} htmlFor=\"number\">\n          Number\n        </label>\n        <input\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\n// class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleChange = e => {\n//     const { name, value } = e.target;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.onSubmit(this.state);\n//     this.resetForm();\n//   };\n\n//   resetForm() {\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   }\n\n//   render() {\n//     const { name, number } = this.state;\n//     const { handleSubmit, handleChange } = this;\n//     return (\n//       <div>\n//         <form onSubmit={handleSubmit}>\n//           <label className={styles.label} htmlFor=\"name\">\n//             Name\n//           </label>\n//           <input\n//             value={name}\n//             onChange={handleChange}\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n//           <label className={styles.label} htmlFor=\"number\">\n//             Number\n//           </label>\n//           <input\n//             onChange={handleChange}\n//             value={number}\n//             type=\"tel\"\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n//           <button type=\"submit\">Add contact</button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <div>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input value={filter} required name=\"filter\" onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"contact-list_li__TN+3Q\"};","import PropTypes from 'prop-types';\n\nimport style from './contact-list.module.css';\n\nconst ContactList = ({ onRemoveContacts, contacts }) => {\n  if (contacts.length === 0) {\n    return null;\n  }\n\n  const elements = contacts.map(contact => (\n    <li className={style.li} key={contact.id}>\n      {contact.name}: {contact.number}\n      <button type=\"button\" onClick={() => onRemoveContacts(contact?.id)}>\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  onRemoveContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nContactList.defaultProps = {\n  contacts: [],\n};\n","export const getContacts = store => store.contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"form_section__k3fRP\",\"container\":\"form_container__eDijo\",\"title\":\"form_title__rtZbl\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\n\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nimport { getContacts } from 'redux/contacts/contact-selector';\nimport {\n  fetchContacts,\n  deleteContacts,\n  addContactsFetch,\n} from '../../redux/contacts/contact-operations';\n\nimport styles from './form.module.css';\n\nconst Form = () => {\n  const { items, loading, error } = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContacts = data => {\n    const resultNumber = items.find(contact => contact.number === data.number);\n    if (resultNumber) {\n      return alert(`${data.name} уже есть в списке`);\n    }\n\n    const action = addContactsFetch(data);\n\n    dispatch(action);\n  };\n\n  const onRemoveContacts = id => {\n    const action = deleteContacts(id);\n    dispatch(action);\n  };\n\n  const [filter, setFilter] = useState('');\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setFilter(value);\n  };\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return items;\n    }\n    const filterStr = filter.toLowerCase();\n    const result = items.filter(contact => {\n      const name = contact.name.toLowerCase();\n      return name.includes(filterStr);\n    });\n\n    return result;\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm onSubmit={onAddContacts} />\n      <h2 className={styles.title}>Contacts</h2>\n      <Filter filter={filter} handleChange={handleChange} />\n      {loading && <p>...Loading</p>}\n      {error && <p>Error while fetching</p>}\n      <ContactList\n        contacts={filteredContacts}\n        onRemoveContacts={onRemoveContacts}\n      />\n    </div>\n  );\n};\n\nexport default Form;\n","import { Navigate } from 'react-router-dom';\nimport useAuth from 'shared/hooks/useAuth';\n\nfunction WithAuthRedirect(Component, navigetTo) {\n  const WithAuthRedirect = props => {\n    const isLogin = useAuth();\n\n    return !isLogin ? <Navigate to={navigetTo} /> : <Component {...props} />;\n  };\n\n  return WithAuthRedirect;\n}\n\nexport default WithAuthRedirect;\n","import Form from './../../components/Form';\nimport WithAuthRedirect from '../../hoc/WithAuthRedirect';\n\nconst ContactsPage = () => {\n  return (\n      <Form />\n  );\n};\n\nconst ContactsWithAuthRedirect = WithAuthRedirect(ContactsPage, '/login');\n\nexport default ContactsWithAuthRedirect;\n"],"names":["onSubmit","useState","name","number","form","setForm","handleChange","e","target","value","prevState","preventDefault","className","styles","htmlFor","onChange","type","pattern","title","required","filter","ContactList","onRemoveContacts","contacts","length","elements","map","contact","style","onClick","id","defaultProps","getContacts","store","useSelector","items","loading","error","dispatch","useDispatch","useEffect","fetchContacts","setFilter","filteredContacts","filterStr","toLowerCase","includes","getFilteredContacts","data","find","alert","action","addContactsFetch","deleteContacts","Component","navigetTo","props","useAuth","to","WithAuthRedirect"],"sourceRoot":""}