{"version":3,"file":"static/js/104.467c606b.chunk.js","mappings":"6PAAaA,EAAe,CAC1BC,MAAO,GACPC,SAAU,I,SC6CZ,EAxCkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAClCC,GAAaF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAE3C,GAA8CE,EAAAA,EAAAA,GAAQ,CACpDL,SAAAA,EACAH,aAAAA,IAFMS,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAIrBV,EAAoBQ,EAApBR,MAAOC,EAAaO,EAAbP,SACf,OACE,kBAAMC,SAAUQ,EAAhB,WACE,4BACE,kBAAOC,QAASR,EAAhB,qBACA,kBACES,GAAIT,EACJU,KAAK,QACLC,MAAOd,EACPe,KAAK,QACLC,SAAUP,EACVQ,YAAY,cACZC,UAAQ,QAGZ,4BACE,kBAAOP,QAASL,EAAhB,wBACA,kBACEM,GAAIN,EACJO,KAAK,WACLC,MAAOb,EACPe,SAAUP,EACVQ,YAAY,iBACZF,KAAK,WACLG,UAAQ,QAGZ,mBAAQH,KAAK,SAAb,qBAGL,ECnBD,EAlBkB,WAChB,IAAMI,GAASC,EAAAA,EAAAA,KACTC,GAAUC,EAAAA,EAAAA,MAMhB,OAAIH,GACK,SAAC,KAAD,CAAUI,GAAG,eAGpB,0BACE,SAAC,EAAD,CAAWrB,SATC,SAAAsB,GACdH,GAAQI,EAAAA,EAAAA,IAAMD,GACf,KAUF,C,kECAD,IAtBgB,SAAC,GAA8C,IAA7CtB,EAA4C,EAA5CA,SAAUH,EAAkC,EAAlCA,aAAkC,IAApB2B,QAAAA,OAAoB,SAC1D,GAA0BC,EAAAA,EAAAA,WAAS,UAAI5B,IAAvC,eAAOS,EAAP,KAAcoB,EAAd,KAkBA,MAAO,CAACpB,MAAAA,EAAOoB,SAAAA,EAAUnB,aAhBJ,SAAC,GAAc,IAAboB,EAAY,EAAZA,OACXhB,EAAegB,EAAfhB,KAAMC,EAASe,EAATf,MACdc,GAAS,SAAAE,GAAS,yBACXA,GADW,cAEbjB,EAAOC,GAFM,GAIrB,EAUsCJ,aARlB,SAACqB,GAClBA,EAAEC,iBACF9B,GAAS,UAAIM,IACVkB,GACCE,GAAS,UAAI7B,GAEpB,EAGJ,C","sources":["components/LoginForm/initialState.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const initialState = {\n  email: '',\n  password: '',\n};","import { useMemo } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport useForm from '../../shared/hooks/useForm';\n\nimport { initialState } from './initialState';\n\nconst LoginForm = ({ onSubmit }) => {\n  const emailId = useMemo(() => nanoid(), []);\n  const passwordId = useMemo(() => nanoid(), []);\n\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit,\n    initialState,\n  });\n  const { email, password } = state;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor={emailId}>Email:</label>\n        <input\n          id={emailId}\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          onChange={handleChange}\n          placeholder=\"Input email\"\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor={passwordId}>Password:</label>\n        <input\n          id={passwordId}\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          placeholder=\"Input password\"\n          type=\"password\"\n          required\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport useAuth from '../../shared/hooks/useAuth';\n\nimport { login } from 'redux/auth/auth-operations';\n\nimport LoginForm from '../../components/LoginForm';\n\nconst LoginPage = () => {\n  const isAuth = useAuth();\n  const dispath = useDispatch();\n\n  const onLogin = data => {\n    dispath(login(data));\n  };\n\n  if (isAuth) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <LoginForm onSubmit={onLogin} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import {useState} from \"react\";\n\nconst useForm = ({onSubmit, initialState, isReset = true}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value} = target;\n        setState(prevState => ({\n            ...prevState,\n            [name]: value\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        if(isReset) {\n            setState({...initialState})\n        }\n    };\n\n    return {state, setState, handleChange, handleSubmit};\n}\n\nexport default useForm;"],"names":["initialState","email","password","onSubmit","emailId","useMemo","nanoid","passwordId","useForm","state","handleChange","handleSubmit","htmlFor","id","name","value","type","onChange","placeholder","required","isAuth","useAuth","dispath","useDispatch","to","data","login","isReset","useState","setState","target","prevState","e","preventDefault"],"sourceRoot":""}